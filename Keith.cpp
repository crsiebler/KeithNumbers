// AUTHOR: Kristen Tourek

//**************************************************************************************************************
// FILE: Keith.cpp
//**************************************************************************************************************
#include <iostream>
#include "Main.hpp"
#include "Keith.hpp"
#include "Thread.hpp"

using std::cout;
using std::endl;

//==============================================================================================================
// Static Function Declarations
//==============================================================================================================
static bool IsKeith
    (
    ulong const pNum
    );

//==============================================================================================================
// Function Definitions
//==============================================================================================================

//--------------------------------------------------------------------------------------------------------------
// FindKeiths()
//
//--------------------------------------------------------------------------------------------------------------
void FindKeiths
    (
    ulong pLimit
    )
{
    if (GetVerbose()) cout << "FindKeiths() Begin" << endl;
    for (ulong n = 10; n <= pLimit; n++) {
        if (IsKeith(n))
            ;
    }
    if (GetVerbose()) cout << "FindKeiths() End" << endl;
}

//--------------------------------------------------------------------------------------------------------------
// FindKeithsThread()
//
//--------------------------------------------------------------------------------------------------------------
void *FindKeithsThread
    (
    void *pState
    )
{
    if (GetVerbose()) cout << "FindKeithsThread() Begin" << endl;
    ThreadState *state = static_cast<ThreadState *>(pState);
    FindKeiths(state->mLimit);
    state->mExitCode = 0;
    if (GetVerbose()) cout << "FindKeithsThread() End" << endl;
    pthread_exit(pState);
}

//--------------------------------------------------------------------------------------------------------------
// IsKeith()
//
//--------------------------------------------------------------------------------------------------------------
static bool IsKeith
    (
    ulong const pNum
    )
{
    ulong g[9],i,n,s,t=pNum;
    for(n=s=0;t;t/=10)s+=g[n++]=t%10;
    for(i=n;s<pNum;){
        i=(i+n-1)%n;
        t=g[i];g[i]=s;s=s*2-t;
    }
    return n>1&&s==pNum;
}
